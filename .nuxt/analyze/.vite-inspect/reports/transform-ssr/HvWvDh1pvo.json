{
  "resolvedId": "C:/Users/kchar/OneDrive/Documents/Projects/limelightsmp-website/app.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script>\r\nimport json from './members.json'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      myJson: json\r\n    }\r\n  },\r\n  methods: {\r\n    splitJoin(theText) {\r\n      return theText.split(',');\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<template >\r\n  <componentsHeader />\r\n  <div class=\"container\">\r\n    <div v-for=\"members in myJson\" class=\"row\">\r\n      <div v-for=\"names in members\" class=\"col-sm-3\">\r\n        <v-hover>\r\n          <v-card class=\"mx-auto\" height=\"350\" max-width=\"350\">\r\n            <img :src=\"'../images/' + names.name + '.png'\" class=\"card-img-top\" alt=\"...\">\r\n            <div v-if=\"names.enabled == true\" class=\"card-body\">\r\n              <h5 class=\"card-title\">{{ names.name }}</h5>\r\n              <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's\r\n                content.</p>\r\n              <div v-for=\"link in splitJoin(names.links)\">\r\n                <a :href=\"link\" class=\"\">{{ link }}</a>\r\n              </div>\r\n            </div>\r\n          </v-card>\r\n        </v-hover>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style lang=\"scss\" scoped>\r\n.v-card.on-hover.v-theme--dark {\r\n  background-color: rgba(#FFF, 0.8),\r\n\r\n}\r\n\r\n.v-card__text {\r\n  color: #000\r\n}\r\n</style>\r\n",
      "start": 1707368398047,
      "end": 1707368398082,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707368398082,
      "end": 1707368398082,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707368398082,
      "end": 1707368398083,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707368398083,
      "end": 1707368398083,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707368398083,
      "end": 1707368398083,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707368398083,
      "end": 1707368398083,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707368398083,
      "end": 1707368398083,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707368398083,
      "end": 1707368398083,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707368398083,
      "end": 1707368398083,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707368398083,
      "end": 1707368398083,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\r\nimport json from './members.json'\r\n\r\nconst _sfc_main = {\r\n  data() {\r\n    return {\r\n      myJson: json\r\n    }\r\n  },\r\n  methods: {\r\n    splitJoin(theText) {\r\n      return theText.split(',');\r\n\r\n    }\r\n  }\r\n}\r\n\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n  const _component_componentsHeader = _resolveComponent(\"componentsHeader\")\n  const _component_v_hover = _resolveComponent(\"v-hover\")\n  const _component_v_card = _resolveComponent(\"v-card\")\n\n  _push(`<!--[-->`)\n  _push(_ssrRenderComponent(_component_componentsHeader, null, null, _parent))\n  _push(`<div class=\"container\" data-v-8b8048b7><!--[-->`)\n  _ssrRenderList($data.myJson, (members) => {\n    _push(`<div class=\"row\" data-v-8b8048b7><!--[-->`)\n    _ssrRenderList(members, (names) => {\n      _push(`<div class=\"col-sm-3\" data-v-8b8048b7>`)\n      _push(_ssrRenderComponent(_component_v_hover, null, {\n        default: _withCtx((_, _push, _parent, _scopeId) => {\n          if (_push) {\n            _push(_ssrRenderComponent(_component_v_card, {\n              class: \"mx-auto\",\n              height: \"350\",\n              \"max-width\": \"350\"\n            }, {\n              default: _withCtx((_, _push, _parent, _scopeId) => {\n                if (_push) {\n                  _push(`<img${\n                    _ssrRenderAttr(\"src\", '../images/' + names.name + '.png')\n                  } class=\"card-img-top\" alt=\"...\" data-v-8b8048b7${\n                    _scopeId\n                  }>`)\n                  if (names.enabled == true) {\n                    _push(`<div class=\"card-body\" data-v-8b8048b7${\n                      _scopeId\n                    }><h5 class=\"card-title\" data-v-8b8048b7${\n                      _scopeId\n                    }>${\n                      _ssrInterpolate(names.name)\n                    }</h5><p class=\"card-text\" data-v-8b8048b7${\n                      _scopeId\n                    }>Some quick example text to build on the card title and make up the bulk of the card&#39;s content.</p><!--[-->`)\n                    _ssrRenderList($options.splitJoin(names.links), (link) => {\n                      _push(`<div data-v-8b8048b7${\n                        _scopeId\n                      }><a${\n                        _ssrRenderAttr(\"href\", link)\n                      } class=\"\" data-v-8b8048b7${\n                        _scopeId\n                      }>${\n                        _ssrInterpolate(link)\n                      }</a></div>`)\n                    })\n                    _push(`<!--]--></div>`)\n                  } else {\n                    _push(`<!---->`)\n                  }\n                } else {\n                  return [\n                    _createVNode(\"img\", {\n                      src: '../images/' + names.name + '.png',\n                      class: \"card-img-top\",\n                      alt: \"...\"\n                    }, null, 8, [\"src\"]),\n                    (names.enabled == true)\n                      ? (_openBlock(), _createBlock(\"div\", {\n                          key: 0,\n                          class: \"card-body\"\n                        }, [\n                          _createVNode(\"h5\", { class: \"card-title\" }, _toDisplayString(names.name), 1),\n                          _createVNode(\"p\", { class: \"card-text\" }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"),\n                          (_openBlock(true), _createBlock(_Fragment, null, _renderList($options.splitJoin(names.links), (link) => {\n                            return (_openBlock(), _createBlock(\"div\", null, [\n                              _createVNode(\"a\", {\n                                href: link,\n                                class: \"\"\n                              }, _toDisplayString(link), 9, [\"href\"])\n                            ]))\n                          }), 256))\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ]\n                }\n              }),\n              _: 2\n            }, _parent, _scopeId))\n          } else {\n            return [\n              _createVNode(_component_v_card, {\n                class: \"mx-auto\",\n                height: \"350\",\n                \"max-width\": \"350\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(\"img\", {\n                    src: '../images/' + names.name + '.png',\n                    class: \"card-img-top\",\n                    alt: \"...\"\n                  }, null, 8, [\"src\"]),\n                  (names.enabled == true)\n                    ? (_openBlock(), _createBlock(\"div\", {\n                        key: 0,\n                        class: \"card-body\"\n                      }, [\n                        _createVNode(\"h5\", { class: \"card-title\" }, _toDisplayString(names.name), 1),\n                        _createVNode(\"p\", { class: \"card-text\" }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"),\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList($options.splitJoin(names.links), (link) => {\n                          return (_openBlock(), _createBlock(\"div\", null, [\n                            _createVNode(\"a\", {\n                              href: link,\n                              class: \"\"\n                            }, _toDisplayString(link), 9, [\"href\"])\n                          ]))\n                        }), 256))\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 2\n              }, 1024)\n            ]\n          }\n        }),\n        _: 2\n      }, _parent))\n      _push(`</div>`)\n    })\n    _push(`<!--]--></div>`)\n  })\n  _push(`<!--]--></div><!--]-->`)\n}\n\nimport \"C:/Users/kchar/OneDrive/Documents/Projects/limelightsmp-website/app.vue?vue&type=style&index=0&scoped=8b8048b7&lang.scss\"\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"app.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender],['__scopeId',\"data-v-8b8048b7\"]])",
      "start": 1707368398083,
      "end": 1707368398094,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": "C:/Users/kchar/OneDrive/Documents/Projects/limelightsmp-website/app.vue",
        "names": [],
        "sources": [
          "C:/Users/kchar/OneDrive/Documents/Projects/limelightsmp-website/app.vue"
        ],
        "sourcesContent": [
          "<script>\r\nimport json from './members.json'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      myJson: json\r\n    }\r\n  },\r\n  methods: {\r\n    splitJoin(theText) {\r\n      return theText.split(',');\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<template >\r\n  <componentsHeader />\r\n  <div class=\"container\">\r\n    <div v-for=\"members in myJson\" class=\"row\">\r\n      <div v-for=\"names in members\" class=\"col-sm-3\">\r\n        <v-hover>\r\n          <v-card class=\"mx-auto\" height=\"350\" max-width=\"350\">\r\n            <img :src=\"'../images/' + names.name + '.png'\" class=\"card-img-top\" alt=\"...\">\r\n            <div v-if=\"names.enabled == true\" class=\"card-body\">\r\n              <h5 class=\"card-title\">{{ names.name }}</h5>\r\n              <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's\r\n                content.</p>\r\n              <div v-for=\"link in splitJoin(names.links)\">\r\n                <a :href=\"link\" class=\"\">{{ link }}</a>\r\n              </div>\r\n            </div>\r\n          </v-card>\r\n        </v-hover>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style lang=\"scss\" scoped>\r\n.v-card.on-hover.v-theme--dark {\r\n  background-color: rgba(#FFF, 0.8),\r\n\r\n}\r\n\r\n.v-card__text {\r\n  color: #000\r\n}\r\n</style>\r\n"
        ],
        "mappings": "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"
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707368398095,
      "end": 1707368398095,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707368398095,
      "end": 1707368398095,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707368398095,
      "end": 1707368398095,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707368398095,
      "end": 1707368398095,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707368398095,
      "end": 1707368398095,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707368398095,
      "end": 1707368398095,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707368398095,
      "end": 1707368398095,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707368398095,
      "end": 1707368398096,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707368398096,
      "end": 1707368398096,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707368398096,
      "end": 1707368398096,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707368398096,
      "end": 1707368398096,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707368398096,
      "end": 1707368398096,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707368398096,
      "end": 1707368398096,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707368398096,
      "end": 1707368398096,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707368398096,
      "end": 1707368398096,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707368398096,
      "end": 1707368398096,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707368398097,
      "end": 1707368398097,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707368398097,
      "end": 1707368398097,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707368398097,
      "end": 1707368398099,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707368398097,
      "end": 1707368398099,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707368398099,
      "end": 1707368398099,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707368398099,
      "end": 1707368398099,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1707368398099,
      "end": 1707368398099,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707368398099,
      "end": 1707368398100,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707368398100,
      "end": 1707368398100,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707368398100,
      "end": 1707368398100,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707368398100,
      "end": 1707368398100,
      "order": "normal"
    }
  ]
}
